// ----------------------------------------------------------------CALC OPERATIONS VERSION -----------------------------------------------------------
function Calc(func, a, b) {
    let isNotValid = (typeof a !== 'number') || (typeof b !== 'number');
    if (isNotValid) {
        return ('Error');
    }
    let operations = {
        'sum': (a + b),
        'sub': (a - b),
        'multi': (a * b),
        'div': (a / b),
        'rem': (a % b),
        'con': (a ** b),
    };
    for (let key in operations) {
        if (key === func) {
            return operations[key];
        }
    }
    return 'unknown operation';
}

console.log(Calc('sum', 40, 10));
console.log(Calc('sub', 100, 50));
console.log(Calc('multi', 5, 10));
console.log(Calc('div', 100, 2));
console.log(Calc('rem', 50, 100));
console.log(Calc('con', 2, 6));
console.log(Calc('non', 'non', 'non'));
console.log(Calc('', '', ''));
console.log(Calc());
console.log(Calc('fff', 5, 5));

// -------------------------------------------------------------------COMMENT -------------------------------------------------------------------
    // '3' - Делаем переменную c проверкой что операнды а и b не являються числами
    // '4-5' - Запускаем проверку на то что а и b не являються числами, если true, запускается возврат 'Erorr'
    // '15' - Создаем цикл for, внутри создаем переменную key которая будет выполняться для каждого оператора(operations)
    // '16' - Присваиваем переменную 'key' к опции функции 'func' (без приведения типа данных ===), получаем результат true, который запускает блок кода
    // '17' - Блок кода, возвращаем операции(operations) и подключаем модернизировануую 'key=func' которая дает доступ к свойствам, блогодаря этому каждое свойство выполняется по очереди не перемешиваясь с друг-другом, коротко говоря этот ход не поломает код и выведет правильно результат по запросу
// -----------------------------------------------------------------------------------------------------------------------------------------------
